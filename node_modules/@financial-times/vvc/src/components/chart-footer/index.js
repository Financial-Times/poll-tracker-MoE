import React from 'react';
import { css } from '@emotion/core';
import {
  copyrightStylesBase,
  sourceStylesBase,
  sourceStylesPrint,
  sourceStylesSocial,
  sourceStylesVideo,
} from './styles.js';
import { chartFooterPropTypes } from '../prop-types';
import { chartFooterDefaultProps } from '../default-props';

const sourceStylesMap = {
  print: sourceStylesPrint,
  social: sourceStylesSocial,
  video: sourceStylesVideo,
  web: null,
};

const ChartFooter = ({
  copyright,
  height,
  margin,
  source,
  sourceFontSize,
  sourceLineHeight,
  sourcePosition,
  type,
}) => {
  const { x: sourcePositionX = 0, y: sourcePositionY = 0 } = sourcePosition;

  // Calculate number of source lines
  const noOfSourceLines = (source && source.split('|').length) || 0;
  // Calculate the height of the chart source lines (excluding the copyright)
  const sourceHeight = sourceLineHeight * noOfSourceLines;

  // Calculate the position of the FT copyright line (the bottom left corner)
  const sourceCopyrightPositionY = height - sourcePositionY;
  // Calculate the height of the chart copyright line
  const sourceCopyrightHeight = copyright ? sourceLineHeight : 0;

  // Calculate the position the chart footer should start at
  // (the bottom left corner of the first line)
  const sourceTopPositionY =
    sourceCopyrightPositionY - sourceCopyrightHeight - sourceHeight + sourceLineHeight;

  return (
    <>
      {/* Source */}
      <text
        css={css`
          font-size: ${sourceFontSize}px;
          line-height: ${sourceLineHeight}px;
          ${sourceStylesBase};
          ${sourceStylesMap[type]};
        `}
        data-id={`ft-webgraphic-${type}source`}
      >
        {source
          ? source.split('|').map((line, i) => (
              <tspan
                data-id={`ft-webgraphic-${type}__source-line-${i}`}
                key={`ft-webgraphic-${type}__source-line-${i}`} // eslint-disable-line react/no-array-index-key
                x={sourcePositionX}
                y={sourceTopPositionY + i * sourceLineHeight}
              >
                {line}
              </tspan>
            ))
          : null}
      </text>

      {/* Copyright */}
      {copyright && (
        <text
          css={css`
            font-size: ${sourceFontSize}px;
            line-height: ${sourceLineHeight}px;
            ${copyrightStylesBase};
          `}
          data-id="chart-copyright"
        >
          <tspan x={sourcePositionX} y={sourceCopyrightPositionY}>
            {copyright}
          </tspan>
        </text>
      )}
    </>
  );
};

ChartFooter.propTypes = chartFooterPropTypes;
ChartFooter.defaultProps = chartFooterDefaultProps;

export default ChartFooter;
