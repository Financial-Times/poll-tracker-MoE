import { letterFrequency, genDateValue } from '@visx/mock-data';
import { scaleLinear, scaleOrdinal, scaleThreshold, scaleSqrt } from '@visx/scale';
import categoricalUsSampleData from '../../sample-data/categorical-us';
import { Light } from '../chart-frame/watermarks';
import { identity } from '../../util';

const genLines = (num) => new Array(num).fill(1).map(() => genDateValue(25));

export const baseComponentDefaultProps = {
  width: false,
  height: false,
  margin: false,
  padding: { top: 0, right: 50, bottom: 0, left: 20 },
  type: 'web',
};

export const chartFrameDefaultProps = {
  type: 'web',
};

export const frameDefaultProps = {
  ...baseComponentDefaultProps,
  ...chartFrameDefaultProps,
  background: '#fff1e5',
  children: [],
  description: false,
  hideTitleTooltip: false,
  watermark: false,
  hideTopper: false,
  hideFooter: false,
  watermarkOffset: { x: 40, y: 0 },
  tooltipComponent: identity,
};

export const frameSocialDefaultProps = {
  // <Frame />
  width: 612,
  height: 612,
  margin: { top: 140, right: 40, bottom: 80, left: 40 },
  background: '#262a33',
  watermark: Light,
  watermarkOffset: { x: 40, y: 40 },
  // <ChartTopper />
  stabRule: true,
  subtitleFontSize: 24,
  subtitleLineHeight: 28,
  subtitlePosition: { x: 40, y: 112 },
  titleFontSize: 30,
  titleLineHeight: 32,
  titlePosition: { x: 40, y: 80 },
  // <ChartFooter />
  copyright: null,
  sourceFontSize: 20,
  sourceLineHeight: 20,
  sourcePosition: { x: 40, y: 40 },
};

export const frameVideoDefaultProps = {
  // <Frame />
  width: 1920,
  height: 1080,
  margin: { top: 250, right: 207, bottom: 160, left: 207 },
  background: '#262a33',
  watermark: false,
  // <ChartTopper />
  stabRule: false,
  subtitleFontSize: 48,
  subtitleLineHeight: 48,
  subtitlePosition: { x: 207, y: 200 },
  titleFontSize: 72,
  titleLineHeight: 68,
  titlePosition: { x: 207, y: 130 },
  // <ChartFooter />
  copyright: null,
  sourceFontSize: 36,
  sourceLineHeight: 38,
  sourcePosition: { x: 207, y: 60 },
};

export const framePrintDefaultProps = {
  // <Frame />
  width: 53.71,
  height: 69.85,
  padding: { top: 0, right: 0, bottom: 0, left: 0 },
  margin: { top: 40, right: 7, bottom: 35, left: 7 },
  background: '#FFFFFF',
  watermark: false,
  watermarkOffset: { x: 0, y: 0 },
  // <ChartTopper />
  stabRule: false,
  subtitleFontSize: 9.6,
  subtitleLineHeight: 10,
  subtitlePosition: { x: 7, y: 27 },
  titleFontSize: 12,
  titleLineHeight: 13,
  titlePosition: { x: 7, y: 15 },
  // <ChartFooter />
  copyright: null,
  sourceFontSize: 7.2,
  sourceLineHeight: 8,
  sourcePosition: { x: 7, y: 8 },
};

export const chartTopperDefaultProps = {
  ...baseComponentDefaultProps,
  ...chartFrameDefaultProps,
  stabRule: true,
  subtitle: 'Subtitle TKTK',
  subtitleMarkupCustom: false,
  title: 'Chart title TK',
  titleMarkupCustom: false,
};

export const chartFooterDefaultProps = {
  ...baseComponentDefaultProps,
  ...chartFrameDefaultProps,
  copyright: '© FT',
  source: 'Source: FT research',
  sourcePosition: { x: 1, y: 2 },
};

export const legendComponentDefaultProps = {
  legendWidth: 500,
  legendHeight: 250,
  posX: 10,
  posY: 10,
  legendType: 'categorical',
  invert: false,
  geometry: 'rect',
  draggable: true,
  orientation: 'vertical',
  median: '',
  label: 'Label not yet added',
};

// TODO: Remove “component” from names

export const axisArrowsComponentDefaultProps = {
  axisArrows: false,
  axisArrowsScale: false,
  axisArrowsPadding: {
    top: 0,
    right: 10,
    bottom: 0,
    left: 10,
  },
};

export const axisBandingComponentDefaultProps = {
  axisBanding: false,
  bandingScale: false,
};

export const axisComponentDefaultProps = {
  ...baseComponentDefaultProps,
  ...axisArrowsComponentDefaultProps,
  orientation: 'bottom',
  scale: false,
  fullLengthTick: false,
  hideEndTicks: false,
  invertScale: false,
  automaticallyAddPaddingForTicks: true,
  automaticallySetRange: true,
  tickLengthOverride: false,
  tickPositionVariable: false,
  tickLabelVariable: 'label',
  additionalTickValues: false,
  labelOffset: 10,
};

export const barsComponentDefaultProps = {
  ...baseComponentDefaultProps,
  data: letterFrequency,
  fill: 'steelblue',
  xScale: false,
  xVariable: 'frequency',
  yScale: false,
  yVariable: 'letter',
  colorScale: false,
  colorVariable: 'name',
  barHeightVariable: false,
  fixedBarHeight: false,
  automaticallySetRange: false,
};

export const dotsComponentDefaultProps = {
  ...baseComponentDefaultProps,
  opacity: 1,
  xScale: false,
  yScale: false,
  sizeScale: () => 5,
  colorScale: () => '#0f5499',
  hollowDots: false,
  labelColumn: 'name',
  labelProps: false,
  showTooltips: false,
  labelStrokeWidth: 4,
  highlightDotsOnHover: false,
  offChartLabelPosition: 'intersection',
  customTooltipComponent: false,
};

export const lineComponentDefaultProps = {
  data: genLines(3), // Generates 3 x date-value series
  xVariable: 'date',
  yVariable: 'value',
  strokeWidth: 3,
};

export const linesComponentDefaultProps = {
  ...lineComponentDefaultProps,
  highlightedLineOutlineWidth: 0,
  highlightedLineOutlineColor: '#fff1e5',
  hoveredLineStrokeWidth: 3,
  hoveredLinesColorScale: () => '#b3a9a0',
};

export const marimekkoKeyDefaultProps = {
  ...baseComponentDefaultProps,
  barHeightAnnotation: 'Bar height annotation',
  barHeightAnnotationLineHeight: 20,
  barHeightAnnotationWidth: 80,
  keyBarsWidth: 40,
  keyData: [
    { bar: 'top', width: 40, height: 8 },
    { bar: 'middle', width: 36, height: 20 },
    { bar: 'bottom', width: 31, height: 8 },
  ],
  keyMarginBottom: 86,
  keyHeight: 42,
  keyTitle: 'Key',
  keyTitleWidth: 36,
};

export const barChartDefaultProps = {
  ...barsComponentDefaultProps,
  xAxisOrientation: 'bottom',
  yAxisOrientation: 'left',
  automaticallyAddPaddingForTicks: true,
  // <Bars />
  data: letterFrequency,
  xVariable: 'frequency',
  yVariable: 'letter',
  colorScale: () => '#0f5499',
  paddingInner: 0.1,
  paddingOuter: 0.1,
  roundScale: true,
};

export const marimekkoChartDefaultProps = {
  ...barsComponentDefaultProps,
  ...marimekkoKeyDefaultProps,
  marimekkoKey: false,
  xAxisOrientation: 'top',
  yAxisOrientation: 'left',
  xHideAxisLine: true,
  xFullLengthTicks: true,
  xMin: false,
  xMax: false,
  xTicks: false,
  // <Bars />
  data: categoricalUsSampleData,
  xVariable: 'margin',
  yVariable: 'ecvotes',
  yLabelVariable: 'state',
  yAutomaticallyAddPaddingForTicks: true,
  yTickLength: false,
  barPaddingInner: 1,
  barPaddingOuter: 2,
};

export const connectedScatterChartDefaultProps = {
  ...baseComponentDefaultProps,
  data: [],
  xVariable: 'x',
  yVariable: 'y',
  colorVariable: 'group',
  orderVariable: 'date',
  xAxisOrientation: 'bottom',
  yAxisOrientation: 'left',
  labelColumn: 'date',
};

export const lineChartDefaultProps = {
  ...baseComponentDefaultProps,
  xAxisOrientation: 'bottom',
  yAxisOrientation: 'left',
  xFullLengthTicks: false,
  yFullLengthTicks: false,
  showLegend: true,
  // <Lines />
  data: genLines(3), // Generates 3 x date-value series
  xVariable: 'date',
  yVariable: [], // if elements of the array are passed in, then all columns are displayed as separate lines
  xScaleType: 'time',
  logScale: false,
  showLineEndDots: false,
  hideEndTicks: false,
  showTooltips: false,
  yTransformFunction: identity, // Identity function
  showTooltipLine: false,
  tooltipComponent: ({ seriesName, yValue }) => `${seriesName}: ${yValue}`,
  // <Frame />
  hideTopper: false,
  hideFooter: false,
  hideTitleTooltip: false,
  seriesToHighlight: null,
  labelStrokeColor: '#fff1e5',
  labelStrokeWidth: 4,
  // Color
  ghostLineColor: '#b3a9a0',
  ghostLineHoverColorScale: () => '#b3a9a0',
  ghostLineHoverLabelColorScale: () => '#66605C',
  additionalYTickValues: false,
};

export const smallBarChartDefaultProps = {
  ...barChartDefaultProps,
};

export const scatterChartDefaultProps = {
  ...baseComponentDefaultProps,
  type: 'web',
  data: [],
  xVariable: 'x',
  yVariable: 'y',
  sizeVariable: false,
  colorVariable: 'group',
  colorScale: false,
  xAxisOrientation: 'bottom',
  yAxisOrientation: 'left',
  xAxisLabel: false,
  yAxisLabel: false,
  logScaleX: false,
  logScaleY: false,
  yTickFormat: false,
  yTransformFunction: identity,
  yTickValues: false,
  xTickFormat: false,
  xTransformFunction: identity,
  xTickValues: false,
  maxCircleSize: {
    web: 16,
    print: 9.6,
    social: 24,
    video: 48,
  },
  opacity: 0.7,
  scaleFactor: 1,
  hollowDots: false,
  dotsStrokeWidth: 0,
  lineOfRegression: false,
  labelColumn: 'name',
  xDomain: [0, 10],
  yDomain: [0, 10],
  sizeDomain: [0, 0],
  legendGeometry: 'circle',
  legendOrientation: 'horizontal',
  hideLegend: false,
  hideSizeLegend: false,
  sizeLegendX: 0,
  sizeLegendY: 0,
  showTooltips: false,
  tooltipComponent: ({ seriesName, yValue }) => `${seriesName}: ${yValue}`,
  tooltipPositionOverride: false,
  tooltipHoverRadius: false,
  hoveredDotsStrokeColor: '#000',
  hoveredDotsStrokeWidth: 1,
};

export const delaunayDefaultProps = {
  colorScale: () => '#0f5499',
  debug: false,
  showLine: false,
  showCircle: false,
  yTransformFunction: false,
  tooltipPositionOverride: false,
  lineConfig: false,
  circleConfig: false,
  hoverRadius: false,
};
