/**
 * @file
 * Marimekko key component. Temporary implementation for 2020 US polltracker, pending VVC legend component
 */

import React from 'react';
import { Group } from '@visx/group';
import { scaleLinear } from '@visx/scale';
import { Text } from '@visx/text';
import { extent, sum } from 'd3-array';
import { baseStyles, titleStyles, annotationStyles } from './styles-key';
import Bars from '../../components/bars';
import { marimekkoKeyPropTypes } from '../../components/prop-types';
import { marimekkoKeyDefaultProps } from '../../components/default-props';

const barPaddingInner = 1;

const MarimekkoKey = ({
  barHeightAnnotation,
  barHeightAnnotationLineHeight,
  barHeightAnnotationWidth,
  keyBarsWidth,
  keyData: data,
  keyHeight,
  keyTitle,
  keyTitleWidth,
  keyX,
  keyY,
  margin,
  padding,
}) => {
  const barHeightAnnotationLineY1 = (keyHeight - barHeightAnnotationLineHeight) / 2;
  const barHeightAnnotationLineY2 = keyHeight - barHeightAnnotationLineHeight / 2;

  // Modified Marimekko geometry
  const dataXExtent = extent(data, d => d.width);
  const parsedData = data.reduce((a, c, i) => {
    // Add yOffset which details cumulative height based on the size variable
    return [
      ...a,
      {
        ...c,
        yOffset: i === 0 ? 1 : Math.abs(a[a.length - 1].height) + a[a.length - 1].yOffset + 1,
      },
    ];
  }, []);
  const totalHeight = sum(data, d => Math.abs(d.height)) + barPaddingInner * data.length + 1; // Calculate totalHeight for the yScale, plus one for the offset at the top

  const xScale = scaleLinear({
    domain: [Math.min(0, dataXExtent[0]), Math.max(dataXExtent[1], 0)],
  });
  const yScale = scaleLinear({ domain: [0, totalHeight] });

  return (
    <Group
      css={baseStyles}
      transform={`translate(${keyX || -(margin.left + padding.left)}, ${keyY})`}
    >
      {/* Key title */}
      <Text css={titleStyles} verticalAnchor="middle" width={keyTitleWidth} y={keyHeight / 2}>
        {keyTitle}
      </Text>

      {/* Bars and annotation line */}
      <Group transform={`translate(${keyTitleWidth}, 0)`}>
        <Bars
          barHeightVariable="height"
          data={parsedData}
          fill="#cccccc"
          height={keyHeight}
          width={keyBarsWidth}
          xScale={xScale}
          xVariable="width"
          yScale={yScale}
          yVariable="yOffset"
        />

        <line x1="0" x2="0" y1="0" y2={keyHeight} stroke="#666666" strokeWidth="1" />

        {/* Annotation line vertical */}
        <line
          x1={keyBarsWidth + 5}
          x2={keyBarsWidth + 5}
          y1={barHeightAnnotationLineY1}
          y2={barHeightAnnotationLineY2}
          stroke="#33302e"
          strokeWidth="1"
        />

        {/* Annotation line top bar */}
        <line
          x1={keyBarsWidth}
          x2={keyBarsWidth + 10}
          y1={barHeightAnnotationLineY1}
          y2={barHeightAnnotationLineY1}
          stroke="#33302e"
          strokeWidth="1"
        />

        {/* Annotation line bottom bar */}
        <line
          x1={keyBarsWidth}
          x2={keyBarsWidth + 10}
          y1={barHeightAnnotationLineY2}
          y2={barHeightAnnotationLineY2}
          stroke="#33302e"
          strokeWidth="1"
        />
      </Group>

      {/* Bar height annotation */}
      <Text
        css={annotationStyles}
        verticalAnchor="middle"
        width={barHeightAnnotationWidth}
        x={keyTitleWidth + keyBarsWidth + 15}
        y={keyHeight / 2}
      >
        {barHeightAnnotation}
      </Text>
    </Group>
  );
};

MarimekkoKey.propTypes = marimekkoKeyPropTypes;
MarimekkoKey.defaultProps = marimekkoKeyDefaultProps;

export default MarimekkoKey;
