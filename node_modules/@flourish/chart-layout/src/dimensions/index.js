function initDimensions(instance) {
	var dimensions = {};
	var width = null;
	var height = null;
	var plot_aspect = null;

	dimensions.width = function(value) {
		if (value === undefined) {
			if (width !== null) return width;
			return instance.svg.node().getBoundingClientRect().width;
		}
		width = value;
		return instance;
	};

	dimensions.height = function(value) {
		if (value === undefined) {
			if (height !== null) return height;
			else if (plot_aspect !== null) {
				return dimensions.plotHeight() + instance.margins.top + instance.margins.bottom;
			}
			return instance.svg.node().getBoundingClientRect().height;
		}
		height = value;
		plot_aspect = null;
		return instance;
	};

	dimensions.plotAspect = function(value) {
		if (value === undefined) {
			if (plot_aspect !== null) return plot_aspect;
			return dimensions.plotWidth() / dimensions.plotHeight();
		}
		height = null;
		plot_aspect = value;
		return instance;
	};

	dimensions.plotWidth = function() {
		return instance.width() - (instance.margins.right + instance.margins.left);
	};

	dimensions.plotHeight = function() {
		if (plot_aspect === null) {
			return dimensions.height() - (instance.margins.top + instance.margins.bottom);
		}
		return dimensions.plotWidth() / plot_aspect;
	};

	dimensions.xLeft = function() {
		return instance.margins.left;
	};

	dimensions.xRight = function() {
		return instance.width() - instance.margins.right;
	};

	dimensions.yBottom = function() {
		return instance.height() - instance.margins.bottom;
	};

	dimensions.yTop = function() {
		return instance.margins.top;
	};

	return dimensions;
}


function initOffsetLeft(instance) {
	var left_offset = 0;

	return function(value) {
		if (value === undefined) return left_offset;
		else left_offset = value;
		return instance;
	};
}


function initOffsetTop(instance) {
	var top_offset = 0;

	return function(value) {
		if (value === undefined) return top_offset;
		else top_offset = value;
		return instance;
	};
}


export { initDimensions, initOffsetLeft, initOffsetTop };
