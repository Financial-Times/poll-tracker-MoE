import { remToPx } from "../../common";

function initClipUpdating(instance, state) {
	var clip_path = instance.chart.select("clipPath.fl-data-clip-path");
	var clip_rect = clip_path.select("rect");
	var clip_path_grid = instance.chart.select("clipPath.fl-grid-clip-path");
	var clip_rect_grid = clip_path_grid.select("rect");
	var data_background = instance.chart.select(".fl-data-background");
	var data_foreground = instance.chart.select(".fl-data-foreground");
	var gridlines = instance.chart.select(".fl-gridlines");

	return function() {
		var id = instance.identifier() + "-clip-path";
		var clip_attr = "url(#" + id + ")";
		clip_path.attr("id", id);
		var id_grid = instance.identifier() + "-grid-clip-path";
		var clip_attr_grid = "url(#" + id_grid + ")";
		clip_path_grid.attr("id", id_grid);

		data_background.attr("clip-path", clip_attr);
		data_foreground.attr("clip-path", clip_attr);
		gridlines.attr("clip-path", clip_attr_grid);

		var x_left = instance.x_left;
		var x_right = instance.x_right;
		var y_top = instance.y_top;
		var y_bottom = instance.y_bottom;

		var clip = instance.clip();
		var x = clip.left ? x_left : 0;
		var y = clip.top ? y_top : 0;
		var width = Math.max((clip.right ? x_right : instance.width()) - x, 1);
		var height = Math.max((clip.bottom ? y_bottom : instance.height()) - y, 1);

		clip_rect
			.attr("x", x)
			.attr("y", y)
			.attr("width", width)
			.attr("height", height);

		var lr_padding = remToPx(state.x.gridline_width, true);
		var tb_padding = remToPx(state.y.gridline_width, true);

		clip_rect_grid
			.transition()
			.duration(instance.animationDuration())
			.attr("x", x_left - lr_padding)
			.attr("y", y_top - tb_padding)
			.attr("width", (x_right - x_left) + (2 * lr_padding))
			.attr("height", (y_bottom - y_top) + (2 * tb_padding));
	};
}


export { initClipUpdating };
