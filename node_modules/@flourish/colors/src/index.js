import { DEFAULTS, DEFAULT_FALLBACK_VALUE } from "./defaults";
import { getCategoricalFunction } from "./scales/categorical";
import { getSequentialFunction } from "./scales/sequential";
import { getDivergingFunction } from "./scales/diverging";


function init(state) {
	var colorFunction = null;

	for (var key in DEFAULTS) {
		if (state[key] === undefined) state[key] = DEFAULTS[key];
	}

	var fallback_value = DEFAULT_FALLBACK_VALUE;

	var updateColorScale = function(values) {
		if (state.scale_type === "categorical") colorFunction = getCategoricalFunction(state, values);
		else if (state.numeric_type === "sequential") colorFunction = getSequentialFunction(state, values);
		else if (state.numeric_type === "diverging") colorFunction = getDivergingFunction(state, values);

		getColor.thresholds = colorFunction.thresholds;
		getColor.centers = colorFunction.centers;
		getColor.midpoint = colorFunction.midpoint;
		getColor.domain = colorFunction.domain;
		getColor.colors = colorFunction.colors;
		getColor.items = colorFunction.items;

		return this;
	};

	var fallback = function(value) {
		if (value === undefined) return fallback_value;
		if (value === "default") fallback_value = DEFAULT_FALLBACK_VALUE;
		else fallback_value = value;
		return this;
	};

	var getColor = function(value) {
		return colorFunction ? colorFunction(value) || fallback_value : fallback_value;
	};

	return {
		getColor: getColor,
		updateColorScale: updateColorScale,
		fallback: fallback
	};
}


export default init;
