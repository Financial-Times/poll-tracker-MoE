function getRandomIntegerGenerator(nextRandom) {
	nextRandom = nextRandom || Math.random;
	return function(first, last) {
		var n = (last - first) + 1;
		return Math.floor(nextRandom() * n) + first;
	};
}


function randomFromArray(values, nextRandom) {
	var index = getRandomIntegerGenerator(nextRandom)(0, values.length-1);
	return values[index];
}


function sampleArray(values, n_samples, replace, nextRandom) {
	var n_points = values.length;
	replace = n_samples !== undefined ? replace : false;
	n_samples = n_samples !== undefined ? Math.floor(n_samples) : n_points;

	if (!n_points || n_samples < 1) return [];

	var out;
	var getRandomInteger = getRandomIntegerGenerator(nextRandom);

	if (replace || n_samples === 1) {
		out = [];
		for (var i = 0; i < n_samples; i++) {
			out.push(values[getRandomInteger(0, n_points - 1)]);
		}
		return out;
	}

	out = values.slice();
	var n = Math.min(n_points, n_samples);

	for (var i = 0; i < n; i++) {
		var pick_index = getRandomInteger(i, n_points - 1);
		if (pick_index === i) continue;
		var pick = out[pick_index];
		var temp = out[i];
		out[i] = pick;
		out [pick_index] = temp;
	}

	out.length = n;

	return out;
}


export { randomFromArray, sampleArray };
