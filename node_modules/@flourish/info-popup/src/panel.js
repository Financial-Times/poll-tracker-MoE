import { select, event as d3_event } from "d3-selection";
import { timerFlush } from "d3-timer";
import "d3-transition";

var next_unique_id = 1;

var OPTIONS = {
	container: document.body,
	point: [window.innerWidth/2, window.innerHeight/2],
	html: "",
	open_duration: 250,
	close_duration: 250,
	popup_custom_template: "",
	position: "overlay",
	shadow: true,
	underlay_color: "rgba(255, 255, 255, 0.75)",

	width_side: 35,
	height_side: 35,
	width_overlay: 80,
	height_overlay: 80,
	vertical_position: "click",
	max_width: null,
	max_height: null,
	closeable: true
};

function Panel() {
	var panel = this;
	panel.unique_id = next_unique_id++;
	panel._is_open = false;
	panel._onclose = null;
	for (var k in OPTIONS) panel["_" + k] = OPTIONS[k];
}

// Create accessor methods for all the options
function accessor(k) {
	Panel.prototype[k] = function(v) {
		if (typeof v == "undefined") return this["_" + k];
		this["_" + k] = v;
		return this;
	};
}
for (var k in OPTIONS) accessor(k);

// Custom accessor method for .point
Panel.prototype.point = function(arg1, arg2) {
	if (typeof arg1 == "undefined") return this._point;
	if (Array.isArray(arg1)) this._point = [ arg1[0], arg1[1] ];
	else if (typeof arg2 != "undefined") this._point = [ arg1, arg2 ];
	else if (arg1 instanceof HTMLElement || arg1 instanceof SVGElement) {
		var r = arg1.getBoundingClientRect();
		this._point = [ Math.floor(r.left + r.width/2), Math.floor(r.top + r.height/2) ];
	}
	else {
		console.error("Panel: could not understand argument");
	}
	return this;
};

Panel.prototype.container = function(container) {
	if (container) this._container = container;
	return this;
};

function fadeOutPanel(panel) {
	panel._getElement().style.pointerEvents = "none";
	panel._is_open = false;
	var duration = panel._close_duration;
	select(panel._getElement())
		.transition().duration(duration)
		.style("background", "rgba(255, 255, 255, 0)")
		.on("interrupt", function() {
			select(this).style("display", panel._is_open ? "block" : "none");
		})
		.on("end", function() {
			select(this).style("display", "none");
		})
		.select(".flourish-panel-close")
		.style("opacity", "0");

	select(panel._inner)
		.transition().duration(duration)
		.style("opacity", 0);

	select(panel._content)
		.transition().duration(duration/2)
		.style("opacity", 0);
}


Panel.prototype.hide = function() {
	var panel = this;
	if (!panel._is_open) return;
	fadeOutPanel(panel);
	return this;
};

Panel.prototype.close = Panel.prototype.hide;

function addCloseButton(panel) {
	select(panel._inner).append("svg")
		.attr("class", "flourish-panel-close")
		.attr("viewBox", "0 0 40 40")
		.style("width", "1.25rem")
		.style("height", "1.25rem")
		.style("position", "absolute")
		.style("right", "1rem")
		.style("top", "1rem")
		.style("cursor", "pointer")
		.style("opacity", 0)
		.on("mouseover", function() { if (panel._closeable) this.style.opacity = 0.66; })
		.on("mouseout", function() { if (panel._closeable) this.style.opacity = 1; })
		.on("click", function () {
			d3_event.stopPropagation();
			panel.hide();
			if (panel._onclose) panel._onclose();
		})
		.on("touch", function() {
			d3_event.stopPropagation();
			panel.hide();
			if (panel._onclose) panel._onclose();
		})
		.append("path")
		.attr("stroke", "#333333")
		.attr("stroke-width", "0.5rem")
		.attr("stroke-linecap", "round")
		.attr("d", "M 10,10 L 30,30 M 30,10 L 10,30");
}

Panel.prototype.draw = function() {
	var panel = this;
	panel._content.innerHTML = panel._html;
	openPanel(panel);
	return this;
};

Panel.prototype.on = function(event, callback) {
	if (event == "close") {
		if (callback) this._onclose = callback;
	}
	else console.error("Panel .on() method only supports 'close' events");
	return this;
};

function openPanel(panel) {
	var duration = panel._is_open || panel._html == panel._default ? 0 : panel._open_duration;

	var window_w = window.innerWidth, window_h = window.innerHeight;

	var overlay = panel._position == "overlay",
	    full_width = panel._position == "top" || panel._position == "bottom",
	    full_height = panel._position == "left" || panel._position == "right",
	    max_w_percent = 100 * (panel._max_width || Infinity)/window_w,
	    max_h_percent = 100 * (panel._max_height || Infinity)/window_h,
	    y_percent = (100 * panel._point[1] / window_h);

	var position_click = panel._vertical_position == "click" && !Flourish.fixed_height;

	var end_w_percent = overlay ? Math.min(panel._width_overlay, max_w_percent) : (full_width ? 100 : Math.min(panel._width_side, max_w_percent)),
	    end_h_percent = overlay ? Math.min(panel._height_overlay, max_h_percent) : (full_height ? 100 : Math.min(panel._height_side, max_h_percent));

	var end_l_percent = overlay ? (100 - end_w_percent) / 2 : (panel._position == "right" ? (100 - end_w_percent) : 0),
	    end_t_percent_overlay = position_click ? Math.max(1, Math.min((y_percent - (end_h_percent / 2)), 99 - end_h_percent)) : (100 - end_h_percent) / 2,
	    end_t_percent = overlay ? end_t_percent_overlay : (panel._position == "bottom" ? (100 - end_h_percent) : 0);

	var start_w_percent = overlay ? 0 : end_w_percent,
	    start_h_percent = overlay ? 0 : end_h_percent,
	    start_l_percent = overlay ? (100 * panel._point[0]/window_w) : (panel._position == "right" ? 100 : (panel._position == "left" ? -end_w_percent : 0)),
	    start_t_percent = overlay ? y_percent : (panel._position == "bottom" ? 100 : (panel._position == "top" ? -end_h_percent : 0));

	select(panel._getElement()).style("display", "block")
		.transition().duration(duration).delay(duration * 0.25)
		.style("background", overlay ? panel._underlay_color : "rgba(255, 255, 255, 0)")
		.style("pointer-events", overlay ? null : "none");

	select(panel._inner)
		.style("opacity", 1)
		.style("display", "block")
		.style("pointer-events", "none")
		.style("width", start_w_percent + "%")
		.style("height", start_h_percent + "%")
		.style("left", start_l_percent + "%")
		.style("top", start_t_percent + "%")
		.transition().duration(duration)
		.style("width", end_w_percent + "%")
		.style("height", end_h_percent + "%")
		.style("left", end_l_percent + "%")
		.style("top", end_t_percent + "%")
		.on("end", function() {
			select(panel._inner)
				.style("pointer-events", "all")
				.style("width", end_w_percent + "%")
				.style("height", end_h_percent + "%")
				.style("left", end_l_percent + "%")
				.style("top", end_t_percent + "%");
		})
		.on("interrupt", function() {
			select(panel._inner)
				.style("pointer-events", "all")
				.style("width", end_w_percent + "%")
				.style("height", end_h_percent + "%")
				.style("left", end_l_percent + "%")
				.style("top", end_t_percent + "%");
		});

	var offset_panel_content = full_height && position_click;

	select(panel._content)
		.transition().duration(duration/4).delay(duration)
		.style("opacity", 1)
		.on("interrupt", function() {
			select(this).style("opacity", 1);
		});

	select(panel._content).select(".flourish-panel-content-inner")
		.style("position", offset_panel_content ? "absolute" : null)
		.style("top", offset_panel_content ? y_percent + "%" : null)
		.style("transform", offset_panel_content ? "translateY(-50%)" : null);

	select(panel._inner).select(".flourish-panel-close")
		.style("opacity", 0)
		.transition().duration(duration / 4).delay(duration)
		.style("opacity", panel._closeable ? 1 : 0);

	panel._is_open = true;

	timerFlush();
}

Panel.prototype.margins = function() {
	var margins = { top: 0, right: 0, bottom: 0, left: 0 };
	if (this._is_open && this._position != "overlay") {
		var rect = this._getElement().getBoundingClientRect();
		if (this._position == "top") margins.top = rect.top + rect.height;
		if (this._position == "right") margins.right = rect.left;
		if (this._position == "bottom") margins.bottom = rect.top;
		if (this._position == "left") margins.left = rect.left + rect.width;
	}
	margins.css = margins.top + "px " + margins.right + "px " + margins.bottom + "px " + margins.left + "px";
	return margins;
};

Panel.prototype._getElement = function() {
	var panel = this;
	var id = "flourish-panel-" + panel.unique_id;
	var el = document.getElementById(id);
	if (!el) {
		el = document.createElement("div");
		el.className = "flourish-panel";
		el.id = id;
		el.addEventListener("click", function(e) {
			e.stopPropagation();
			panel.hide();
			if (panel._onclose) panel._onclose();
		});

		var s = el.style;
		s.position = "absolute";
		s.zIndex = "999999";
		s.pointerEvents = "none";
		s.width = "100%";
		s.height = "100%";
		s.top = "0";
		s.left = "0";
		s.background = "rgba(255, 255, 255, 0)";

		var inner = document.createElement("div");
		inner.className = "flourish-panel-inner";
		el.appendChild(inner);
		panel._inner = inner;

		s = inner.style;
		s.width = "0";
		s.height = "0";
		s.position = "absolute";
		s.boxSizing = "border-box";

		var shadow = document.createElement("div");
		shadow.className = "flourish-panel-shadow";
		inner.appendChild(shadow);

		var content = document.createElement("div");
		content.className = "flourish-panel-content";
		inner.appendChild(content);
		panel._content = content;

		s = content.style;
		s.opacity = "0";
		s.overflowY = "auto";
		s.height = "100%";

		addCloseButton(panel);

		panel._container.appendChild(el);
	}
	return el;
};

function initPanel() {
	return new Panel();
}

export default initPanel;
