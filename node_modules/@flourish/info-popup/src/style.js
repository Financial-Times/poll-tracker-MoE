import { color } from "d3-color";
import Stylesheet from "@flourish/js2css";

export function appendStyles(instance) {
	if (!document.querySelector("#popup-styles")) {
		var css = document.createElement("style");
		css.id = "popup-styles";
		document.head.appendChild(css);
	}
	var styles = new Stylesheet();
	var header_block = instance._state.popup_header_type == "block";
	var header_background = color(instance._state.popup_header_background || "transparent");
	header_background.opacity = instance._state.popup_header_background ? instance._state.popup_background_opacity : 0;
	var panel_pos = instance._state.panel_position;
	styles.select(".flourish-panel .flourish-panel-shadow")
		.style("pointer-events", "none")
		.style("position", "absolute")
		.style("display", panel_pos == "overlay" || !instance._state.panel_shadow ? "none" : "block")
		.style("top", panel_pos == "bottom" ? "-3rem" : panel_pos == "top" ? "auto" : 0)
		.style("right", panel_pos == "left" ? "-3rem" : panel_pos == "right" ? "auto" : 0)
		.style("bottom", panel_pos == "top" ? "-3rem" : panel_pos == "bottom" ? "auto" : 0)
		.style("left", panel_pos == "right" ? "-3rem" : panel_pos == "left" ? "auto" : 0)
		.style("width", panel_pos == "left" || panel_pos == "right" ? "3rem" : "100%")
		.style("height", panel_pos == "top" || panel_pos == "bottom" ? "3rem" : "100%")
		.style("z-index", "-1")
		.style("overflow", "hidden");

	styles.select(".flourish-panel .flourish-panel-shadow:before")
		.style("content", "''")
		.style("display", "block")
		.style("position", "absolute")
		.style("width", panel_pos == "left" || panel_pos == "right" ? "1.5rem" : "100%")
		.style("height", panel_pos == "top" || panel_pos == "bottom" ? "1.5rem" : "100%")
		.style("border-radius", "50%")
		.style("background", "rgba(0,0,0,0.3)")
		.style("bottom", panel_pos == "bottom" ? "-50%" : panel_pos == "top" ? "auto" : 0)
		.style("left", panel_pos == "left" ? "-50%" : panel_pos == "right" ? "auto" : 0)
		.style("top", panel_pos == "top" ? "-50%" : panel_pos == "bottom" ? "auto" : 0)
		.style("right", panel_pos == "right" ? "-50%" : panel_pos == "left" ? "auto" : 0)
		.style("filter", "blur(15px)");

	styles.select(".flourish-popup")
		.style("pointer-events", "none")
		.select(".flourish-popup-content")
		.style("pointer-events", "auto")
		.style("max-width", instance._state.popup_width == null ? null : instance._state.popup_width + "rem !important");

	styles.select(".flourish-popup header, .flourish-panel header")
		.style("margin", "0");

	styles.select(".flourish-popup header")
		.style("font-weight", "bold")
		.style("color", header_block ? instance._state.popup_header_text_color : null)
		.style("background", header_block ? header_background.rgb() : null)
		.style("padding", instance._state.popup_padding + "rem")
		.style("border-radius", instance._state.popup_radius + "rem " + instance._state.popup_radius + "rem 0 0");

	// If a header is not the last child that means the popup has content
	const headers_with_content = styles.select(".flourish-popup header:not(:last-child)");
	// We want the padding bottom to be zero only when the popup has content and has an inline header
	headers_with_content.style("padding-bottom", header_block ? null : "0");

	// Header which isn't the last child has content following it. If it's an
	// inline header, there should be no extra padding between it and the content.
	styles.select(".flourish-popup header:not(:last-child)")
		.style("padding-bottom", header_block ? null : "0");


	styles.select(".flourish-panel .flourish-panel-content-inner")
		.style("overflow", "auto");

	styles.select(".flourish-panel header")
		.style("font-weight", "bold")
		.style("margin-bottom", "0.5em")
		.style("padding-right", "1rem");

	styles.select(".flourish-popup .main-content")
		.style("padding", instance._state.popup_padding + "rem");

	styles.select(".flourish-popup header + .main-content")
		.style("padding", instance._state.popup_padding + "rem")
		.style("padding-top", !header_block ? "0" : null);


	styles.select(".flourish-popup h1, .flourish-panel h1")
		.style("font-size", "1em")
		.style("margin", "0");


	styles.select(".flourish-popup h1, .flourish-popup h2, .flourish-popup ul li")
		.style("text-align", instance._state.popup_align);

	styles.select(".flourish-panel h1, .flourish-panel h2, .flourish-panel ul li")
		.style("text-align", instance._state.panel_align);

	styles.select(".flourish-popup h2, .flourish-panel h2")
		.style("font-size", "1em")
		.style("margin", header_block ? "0" : "0 0 0.25em")
		.style("opacity", "0.6")
		.style("font-weight", "normal");

	styles.select(".flourish-popup h2:empty, .flourish-panel h2:empty, .flourish-popup h1:empty, .flourish-panel h1:empty, .flourish-popup p:empty, .flourish-panel p:empty")
		.style("display", "none");

	styles.select(".flourish-popup p, .flourish-panel p")
		.style("margin", "0")
		.style("font-size", "inherit")
		.style("font-weight", "normal");

	styles.select(".flourish-popup table, .flourish-panel table")
		.style("margin", "0")
		.style("width", "100%")
		.style("border-collapse", "collapse")
		.style("table-layout", "auto");

	styles.select(".flourish-popup table tr, .flourish-panel table tr")
		.style("border-top", "1px solid #eee");

	styles.select(".flourish-popup table tr:first-child, .flourish-panel table tr:first-child")
		.style("border-top", "none");

	styles.select(".flourish-popup table tr td, .flourish-panel table tr td")
		.style("padding", "0.25em 0 0.25em 0")
		.style("padding-inline-end", "0.25em")
		.style("vertical-align", "top")
		.style("font-size", "inherit")
		.style("text-align", "start")
		.style("font-weight", "normal")
		.style("overflow", "hidden")
		.style("word-break", "break-word")
		.style("text-overflow", "ellipsis");

	styles.select(".flourish-popup table tr:last-child td, .flourish-panel table tr:last-child td")
		.style("padding-bottom", "0");

	styles.select(".flourish-popup .data-heading")
		.style("font-weight", instance._state.popup_list_label_weight)
		.style("display", "inline-block");

	styles.select(".flourish-panel .data-heading")
		.style("font-weight", instance._state.panel_list_label_weight)
		.style("display", "inline-block");


	styles.select(".flourish-popup table tr td.table-col-value, .flourish-panel table tr td.table-col-value")
		.style("text-align", "end")
		.style("padding", "0.25em 0 0.25em 0")
		.style("padding-inline-end", "0.25em");

	styles.select(".flourish-popup table tr:last-child td.table-col-value, .flourish-panel table tr:last-child td.table-col-value")
		.style("padding-bottom", "0");

	styles.select(".flourish-popup ul, .flourish-panel ul")
		.style("padding", "0")
		.style("margin", "0");

	styles.select(".flourish-popup ul li, .flourish-panel ul li")
		.style("font-size", "inherit")
		.style("list-style", "none");

	document.head.querySelector("#popup-styles").innerHTML = styles.print();
}

export function updateStyle(instance) {
	var popup_el = instance.popup._getElement();
	var popup_el_content = popup_el.querySelector(".flourish-popup-content");

	popup_el_content.style.padding = "0";
	popup_el_content.style.textAlign = instance._state.popup_align;
	popup_el_content.style.color = instance._state.popup_text_color;
	popup_el_content.style.fontSize = instance._state.popup_font_size + "rem";
	popup_el_content.style.borderRadius = instance._state.popup_radius + "rem";
	popup_el_content.addEventListener("click", function() { event.stopPropagation(); });

	var panel_el = instance.panel._getElement();
	var panel_el_inner = panel_el.querySelector(".flourish-panel-inner");
	var panel_el_content = panel_el.querySelector(".flourish-panel-content");

	var rgba = color(instance._state.panel_background);
	panel_el_inner.style.background = "rgba(" + rgba.r + "," + rgba.g + "," + rgba.b + "," + instance._state.panel_background_opacity + ")";
	panel_el_inner.style.borderRadius = instance._state.popup_radius + "rem";
	panel_el_inner.style.boxShadow = instance._state.panel_position == "overlay" && instance._state.panel_shadow ? "0 0 1.5rem rgba(0,0,0,0.2)" : "";
	panel_el_inner.addEventListener("click", function() { event.stopPropagation(); });

	panel_el_content.style.padding = instance._state.panel_padding + "rem";
	panel_el_content.style.textAlign = instance._state.panel_align;
	panel_el_content.style.color = instance._state.panel_text_color;
	panel_el_content.style.fontSize = instance._state.panel_font_size + "rem";
	panel_el_content.style.boxSizing = "border-box";

	var g = popup_el.querySelector(".flourish-popup-svg g");
	g.style.fill = instance._state.popup_background;
	g.style.opacity = instance._state.popup_background_opacity;

	var closer = panel_el.querySelector(".flourish-panel-close path");
	if (closer) closer.style.stroke = instance._state.panel_text_color;

	if (instance._state.popup_shadow == false) g.removeAttribute("filter");
	else g.setAttribute("filter", "url(#dropshadow-" + instance.popup.unique_id + ")");
	g.querySelector("rect").setAttribute("rx", instance._state.popup_radius + "rem");
	g.querySelector("path").style.display = (instance._state.popup_pointer ? "block" : "none");

	appendStyles(instance);
}

